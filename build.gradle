buildscript {
    ext.kotlin_version = '1.2.+'

    repositories {
        maven {     url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

subprojects {
    group 'jp.ogiwara'
    version '1.0'

    repositories {
        maven {     url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
        mavenCentral()
        jcenter()
    }

    dependencies {

    }
}

configure(project(":common")){
    apply plugin: "kotlin-platform-common"

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test-common:$kotlin_version"
    }
}

configure(project(':jvm')) {
    apply plugin: 'kotlin-platform-jvm'

    compileKotlin.kotlinOptions.jvmTarget = "1.8"
    compileTestKotlin.kotlinOptions.jvmTarget = "1.8"

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        testCompile "junit:junit:4.12"
        testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
        expectedBy project(':common')

        compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.3'

        compile 'com.google.http-client:google-http-client:1.19.0'

        compile 'org.jsoup:jsoup:1.7.3'
    }
}

configure(project(':js')) {
    apply plugin: 'kotlin-platform-js'
    apply plugin: 'kotlin2js'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
        expectedBy project(':common')

        compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core-js:0.22.3'

    }

    build.doLast() {
        configurations.compile.each { File file ->
            copy {
                includeEmptyDirs = false

                from zipTree(file.absolutePath)
                into 'build/classes/main'
                include '**/*.js'
                eachFile { details ->
                    def names = details.path.split('/')
                    details.path = names.getAt(names.length - 1)
                }
            }
        }
    }

    /*compileKotlin2Js {
        kotlinOptions.metaInfo = true
        kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
        kotlinOptions.sourceMap = true
        kotlinOptions.moduleKind = 'commonjs'
        kotlinOptions.main = "call"
    }

    compileTestKotlin2Js {
        kotlinOptions.metaInfo = true
        kotlinOptions.outputFile = "$project.buildDir.path/js-tests/${project.name}-tests.js"
        kotlinOptions.sourceMap = true
        kotlinOptions.moduleKind = 'commonjs'
        kotlinOptions.main = "call"
    }*/
}